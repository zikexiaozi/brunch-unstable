name: Build Brunch using Github Actions
on:
  push:
    branches:
      - 'continuous-integration'
    paths-ignore:
      - 'README.md'
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build-kernels:
    name: Prepare Kernels
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        kernels: [chromebook]
    #outputs:
    #    kernels: ${{ strategy.matrix.kernels  }}
    steps:
      - name: Install dependencies
        run: |
          yes | DEBIAN_FRONTEND=noninteractive sudo apt update
          #yes | DEBIAN_FRONTEND=noninteractive sudo apt dist-upgrade
          yes | DEBIAN_FRONTEND=noninteractive sudo apt install gcc-12 g++-12 git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison sbsigntool dwarves
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 110 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12
      - name: Checkout Brunch source code
        uses: actions/checkout@v4
      - name: Download kernels and apply patches
        run: ./prepare_kernels.sh ${{ matrix.kernels  }}
      #- name: Compress kernels source files
      #  run: tar -C kernels -zvcf /tmp/kernel.tar.gz ./
      - name: Upload kernels source
        uses: actions/upload-artifact@v3
        with:
          name: built-kernel-${{ matrix.kernels  }}
          path: ${{ matrix.kernels  }}*.tar.gz
          if-no-files-found: error
  build-firmware:
    name: Build firmware and package
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          yes | DEBIAN_FRONTEND=noninteractive sudo apt update
          #yes | DEBIAN_FRONTEND=noninteractive sudo apt dist-upgrade
          yes | DEBIAN_FRONTEND=noninteractive sudo apt install gcc-12 g++-12 git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison sbsigntool python3-protobuf rdfind zstd
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 110 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12
      - name: Checkout Brunch source code
        uses: actions/checkout@v4
      - name: Build brunch
        run: sudo bash build_firmware.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: /tmp/firmware.tar.gz
          if-no-files-found: error
  release:
    name: Make a release
    permissions:
      contents: write
    needs: [build-firmware, build-kernels]
    runs-on: ubuntu-22.04
    #strategy:
#        matrix:
#            kernel: ${{ fromJson(needs.build-kernels.outputs.matrix.kernels) }}
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v3
        with:
          path: /tmp
      - name: Identify stable version
        run: echo "RELEASE_VERSION_TYPE=x86_64" >> $GITHUB_ENV
      - name: Generate release details
        run: |
          free -h
          RELEASE_DATE=$(date '+%Y%m%d%H%M%S')
          RELEASE_VERSION=""
          RELEASE_FILE="${RELEASE_DATE}_${RELEASE_VERSION_TYPE}.tar.gz"
          echo "RELEASE_FILE=${RELEASE_FILE}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${RELEASE_DATE}-${RELEASE_VERSION_TYPE}-${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${RELEASE_DATE} ${RELEASE_VERSION_TYPE}" >> $GITHUB_ENV
          echo "RELEASE_DATE=${RELEASE_DATE}" >> $GITHUB_ENV
      - name: Create a release and upload artifacts as assets
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/*/*tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          tag: "${{ env.RELEASE_DATE }}"
          name: "${{ env.RELEASE_NAME }}"
          commit: "${{ github.ref_name }}"
          body: "${{ github.event.head_commit.message }}"
